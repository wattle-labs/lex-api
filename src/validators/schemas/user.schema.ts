// Generated by ts-to-zod
import { z } from 'zod';

const objectIdSchema = z.any();

export const userSchema = z.object({
  id: z.union([z.string(), objectIdSchema]).optional(),
  externalId: z.string(),
  email: z.string(),
  businessId: z.union([z.string(), objectIdSchema]),
  otherBusinesses: z.array(z.union([z.string(), objectIdSchema])).optional(),
  status: z.string(),
  onboarding: z.object({
    completedAt: z.date().optional(),
    invitationId: z.union([z.string(), objectIdSchema]).optional(),
    isBusinessOwner: z.boolean(),
  }),
  viewIds: z.array(z.union([z.string(), objectIdSchema])).optional(),
  profile: z.object({
    firstName: z.string(),
    lastName: z.string(),
    jobTitle: z.string().optional(),
    department: z.string().optional(),
    region: z.string().optional(),
    timezone: z.string().optional(),
  }),
  hierarchy: z
    .object({
      managerId: z.union([z.string(), objectIdSchema]).optional(),
      level: z.number().optional(),
      directReports: z.array(z.union([z.string(), objectIdSchema])).optional(),
    })
    .optional(),
  authProvider: z.object({
    provider: z.string(),
    lastLogin: z.date().optional(),
    metadata: z.record(z.unknown()).optional(),
  }),
  createdAt: z.date().optional(),
  updatedAt: z.date().optional(),
});
